{"version":3,"sources":["components/ConvertionTypeSelect.js","components/SetupType.js","consts.js","components/SetupTable.js","components/WeatherSelect.js","redux/SetupHistory/setupHistory.types.js","redux/SetupHistory/setupHistory.actions.js","components/AddRaceModal.js","components/WeatherSetupConverter.js","components/Navbar.js","components/Slider/index.js","components/RaceCard/SetupPart.js","components/RaceCard/parseSetup.js","components/RaceCard/SettingsModal.js","components/RaceCard/index.js","App.js","reportWebVitals.js","redux/SetupHistory/setupHistory.reducer.js","redux/rootReducer.js","redux/configureStore.js","index.js"],"names":["ConvertionTypeSelect","value","onConvertionChange","Col","Form","Group","Check","label","onChange","SetupType","element","lowValue","highValue","readOnly","handleChange","Label","Control","event","target","weatherConditions","Greasy","Moist","Drizzle","Rain","Monsoon","Storm","elements","frontWing","adjustment","rearWing","frontSusp","rearSusp","frontArb","rearArb","frontRh","rearRh","frontTp","rearTp","gears","brakeBias","defaultValues","Object","entries","reduce","values","low","high","defaultSetup","wings","front","rear","suspension","arb","rideHeight","tyrePressure","brake","SetupTable","Table","striped","bordered","hover","size","keys","map","currentElement","WeatherSelect","onWeatherChange","as","Row","defaultValue","weatherType","ADD_RACE","SET_ACTIVE_RACE","ADD_SETUP","SET_ACTIVE_SETUP","getRaceList","state","setupHistory","races","race","id","country","getActiveRace","lastRaceId","activeRaceId","getActiveSetup","activeSetupName","getActiveSetupName","activeRace","setups","connect","dispatch","addRace","type","payload","props","useState","show","setShow","setCountry","handleClose","handleCountryChange","Button","variant","onClick","Modal","onHide","Header","closeButton","Title","Body","column","sm","required","Footer","WeatherSetupConverter","weather","setWeather","convertionType","setConvertionType","inputValues","setInputValues","outputValues","setOutputValues","calculateAdjustedValue","_setupValue","adjustValue","weatherAdjustValue","adjustedValue","setupValue","parseInt","Math","round","Number","isNaN","Infinity","calculateOutputValues","currentValues","currentWeather","elementObject","Container","selectedWeather","newOuputValues","checked","newValue","prevState","WetWeatherModal","RaceSelect","handleRaceChange","o","style","width","options","setActiveRace","raceId","collapseOnSelect","bg","expand","Brand","length","selectedOption","Toggle","Collapse","className","ButtonGroup","Slider","min","max","step","minValue","maxValue","SetupPart","name","setupPart","Card","x","marginBottom","console","log","get","toLowerCase","parseSetup","_setup","split","filter","line","startsWith","splitValue","SettingsModal","addSetup","setupName","setSetupName","setup","setSetup","handleSetupChange","text","handleSetupNameChange","display","disabled","rows","parsedSetup","setupValues","setActiveSetup","setupOptions","margin","alignItems","flexGrow","marginRight","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","setupHistoryReducer","action","newRaceId","rootReducer","combineReducers","persistConfig","key","storage","persistedReducer","persistReducer","store","createStore","persistor","persistStore","configureStore","ReactDOM","render","loading","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a3ce9c4e.chunk.js","sourcesContent":["/* eslint-disable react/prop-types */\r\nimport { Col, Form } from \"react-bootstrap\";\r\n\r\nimport React from \"react\";\r\n\r\nconst ConvertionTypeSelect = ({ value, onConvertionChange }) => {\r\n  const label = \"Dry to Wet\";\r\n\r\n  return (\r\n    <span>\r\n      <Col>\r\n        <Form.Group>\r\n          <Form.Check label={label} value={value} onChange={onConvertionChange} />\r\n        </Form.Group>\r\n      </Col>\r\n    </span>\r\n  );\r\n};\r\nexport default ConvertionTypeSelect;\r\n","/* eslint-disable react/prop-types */\r\nimport { Form } from \"react-bootstrap\";\r\nimport React from \"react\";\r\n\r\nconst SetupType = ({ element, label, lowValue, highValue, readOnly = false, handleChange }) => (\r\n  <tr>\r\n    <td>\r\n      <Form.Label>{label}</Form.Label>\r\n    </td>\r\n    <td>\r\n      <Form.Control\r\n        readOnly={readOnly}\r\n        value={lowValue}\r\n        onChange={(event) => handleChange(element, \"low\", event.target.value)}\r\n      />\r\n    </td>\r\n    <td>\r\n      <Form.Control\r\n        readOnly={readOnly}\r\n        value={highValue}\r\n        onChange={(event) => handleChange(element, \"high\", event.target.value)}\r\n      />\r\n    </td>\r\n  </tr>\r\n);\r\n\r\nexport default SetupType;\r\n","export const weatherConditions = {\r\n  \"Bone Dry\": 0,\r\n  Greasy: 9,\r\n  Moist: 18,\r\n  Drizzle: 27,\r\n  \"Light Rain\": 36,\r\n  Rain: 45,\r\n  \"Wet and Slippery\": 54,\r\n  \"Steady Rain\": 63,\r\n  \"Heavy Rain\": 72,\r\n  \"Treacherous Rain and Spray\": 81,\r\n  Monsoon: 90,\r\n  Storm: 100,\r\n};\r\n\r\nexport const elements = {\r\n  frontWing: { label: \"Front Wing\", adjustment: 20 },\r\n  rearWing: { label: \"Rear Wing\", adjustment: 35 },\r\n  frontSusp: { label: \"Front Suspension\", adjustment: -20 },\r\n  rearSusp: { label: \"Rear Suspension\", adjustment: -35 },\r\n  frontArb: { label: \"Front Anti-Roll Bar\", adjustment: -18 },\r\n  rearArb: { label: \"Rear Anti-Roll Bar\", adjustment: -30 },\r\n  frontRh: { label: \"Front Ride Height\", adjustment: -12 },\r\n  rearRh: { label: \"Rear Ride Height\", adjustment: -13 },\r\n  frontTp: { label: \"Front Tire Pressure\", adjustment: 10 },\r\n  rearTp: { label: \"Rear Tire Pressure\", adjustment: 12 },\r\n  gears: { label: \"Gears\", adjustment: -5 },\r\n  brakeBias: { label: \"Brake Bias\", adjustment: 15 },\r\n};\r\n\r\nexport const defaultValues = Object.entries(elements).reduce(\r\n  (values, element) => ({ ...values, [element[0]]: { low: 0, high: 100 } }),\r\n  {}\r\n);\r\n\r\nexport const defaultSetup = {\r\n  wings: { front: { low: 0, high: 100 }, rear: { low: 0, high: 100 } },\r\n  suspension: { front: { low: 0, high: 100 }, rear: { low: 0, high: 100 } },\r\n  arb: { front: { low: 0, high: 100 }, rear: { low: 0, high: 100 } },\r\n  rideHeight: { front: { low: 0, high: 100 }, rear: { low: 0, high: 100 } },\r\n  tyrePressure: { front: { low: 0, high: 100 }, rear: { low: 0, high: 100 } },\r\n  gears: { gears: { low: 0, high: 100 } },\r\n  brake: { brake: { low: 0, high: 100 } },\r\n};\r\n","/* eslint-disable jsx-a11y/control-has-associated-label */\r\n/* eslint-disable react/prop-types */\r\nimport React from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport SetupType from \"./SetupType\";\r\nimport { elements } from \"../consts\";\r\n\r\nconst SetupTable = ({ readOnly = false, values, handleChange = () => {} }) => (\r\n  <Table striped bordered hover={false} size=\"sm\">\r\n    <thead>\r\n      <tr>\r\n        <th />\r\n        <th>Lowest</th>\r\n        <th>Highest</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {Object.keys(elements).map((element) => {\r\n        const currentElement = elements[element];\r\n        const lowValue = values[element].low;\r\n        const highValue = values[element].high;\r\n        return (\r\n          <SetupType\r\n            key={element}\r\n            element={element}\r\n            label={currentElement.label}\r\n            lowValue={lowValue}\r\n            highValue={highValue}\r\n            readOnly={readOnly}\r\n            handleChange={handleChange}\r\n          />\r\n        );\r\n      })}\r\n    </tbody>\r\n  </Table>\r\n);\r\n\r\nexport default SetupTable;\r\n","/* eslint-disable react/prop-types */\r\nimport { Col, Form, Row } from \"react-bootstrap\";\r\nimport React from \"react\";\r\nimport { weatherConditions } from \"../consts\";\r\n\r\nconst WeatherSelect = ({ value, onWeatherChange }) => (\r\n  <Col>\r\n    <Form.Group as={Row}>\r\n      {/* <Form.Label>Weather: </Form.Label> */}\r\n\r\n      <Form.Control as=\"select\" defaultValue=\"Bone Dry\" value={value} onChange={onWeatherChange}>\r\n        {Object.keys(weatherConditions).map((weatherType) => (\r\n          <option key={weatherType}>{weatherType}</option>\r\n        ))}\r\n      </Form.Control>\r\n    </Form.Group>\r\n  </Col>\r\n);\r\n\r\nexport default WeatherSelect;\r\n","export const ADD_RACE = \"ADD_RACE\";\r\n\r\nexport const GET_RACE = \"GET_RACE\";\r\n\r\nexport const SET_ACTIVE_RACE = \"SET_ACTIVE_RACE\";\r\n\r\nexport const ADD_SETUP = \"ADD_SETUP\";\r\n\r\nexport const GET_ACTIVE_SETUP = \"GET_ACTIVE_SETUP\";\r\n\r\nexport const SET_ACTIVE_SETUP = \"SET_ACTIVE_SETUP\";\r\n","import { ADD_RACE, SET_ACTIVE_RACE, ADD_SETUP, SET_ACTIVE_SETUP } from \"./setupHistory.types\";\r\nimport { defaultSetup } from \"../../consts\";\r\n\r\nexport const addRace = (country) => ({\r\n  type: ADD_RACE,\r\n  payload: { country },\r\n});\r\n\r\nexport const getRaceList = (state) => {\r\n  const raceList = Object.values(state.setupHistory.races).map((race) => ({\r\n    id: race.id,\r\n    country: race.country,\r\n  }));\r\n  return raceList;\r\n};\r\n\r\nexport const setActiveRace = (raceId) => ({ type: SET_ACTIVE_RACE, payload: { raceId } });\r\n\r\nexport const getActiveRace = (state) => {\r\n  if (state.setupHistory.lastRaceId < 0 || state.setupHistory.activeRaceId < 0) {\r\n    return null;\r\n  }\r\n\r\n  return state.setupHistory.races[state.setupHistory.activeRaceId];\r\n};\r\n\r\nexport const addSetup = (setupName, setup = defaultSetup) => ({\r\n  type: ADD_SETUP,\r\n  payload: { setup, setupName },\r\n});\r\n\r\nexport const getActiveSetupName = (state) => state.setupHistory.activeSetupName;\r\n\r\nexport const getActiveSetup = (state) => {\r\n  const activeSetupName = getActiveSetupName(state);\r\n  const activeRace = getActiveRace(state);\r\n\r\n  if (!activeSetupName || !activeRace) {\r\n    return null;\r\n  }\r\n\r\n  return state.setupHistory.races[activeRace.id].setups[activeSetupName];\r\n};\r\n\r\nexport const setActiveSetup = (setupName) => ({ type: SET_ACTIVE_SETUP, payload: { setupName } });\r\n","import React, { useState } from \"react\";\r\nimport { Modal, Button, Form, Row, Col } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { addRace } from \"../redux/SetupHistory/setupHistory.actions\";\r\n\r\nconst AddRaceModal = (props) => {\r\n  const [show, setShow] = useState(false);\r\n  const [country, setCountry] = useState(\"\");\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const handleSubmit = () => {\r\n    if (country !== \"\") {\r\n      props.addRace(country);\r\n    }\r\n\r\n    handleClose();\r\n  };\r\n\r\n  const handleCountryChange = (event) => setCountry(event.target.value);\r\n\r\n  const renderForm = () => (\r\n    <Form>\r\n      <Form.Group as={Row}>\r\n        <Form.Label column sm={2}>\r\n          Country:\r\n        </Form.Label>\r\n        <Col sm={10}>\r\n          <Form.Control required onChange={handleCountryChange} />\r\n        </Col>\r\n      </Form.Group>\r\n    </Form>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Button variant=\"dark\" onClick={handleShow}>\r\n        + Add New Race\r\n      </Button>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Add New Race</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>{renderForm()}</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" type=\"submit\" onClick={handleSubmit}>\r\n            Confirm\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addRace: (country) => dispatch(addRace(country)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(AddRaceModal);\r\n","import React, { useState } from \"react\";\r\nimport { Container, Col, Row } from \"react-bootstrap\";\r\nimport ConvertionTypeSelect from \"./ConvertionTypeSelect\";\r\nimport SetupTable from \"./SetupTable\";\r\nimport WeatherSelect from \"./WeatherSelect\";\r\nimport { defaultValues, elements, weatherConditions } from \"../consts\";\r\n\r\nconst WeatherSetupConverter = () => {\r\n  const [weather, setWeather] = useState(\"Bone Dry\");\r\n  const [convertionType, setConvertionType] = useState(true);\r\n  const [inputValues, setInputValues] = useState(defaultValues);\r\n  const [outputValues, setOutputValues] = useState(defaultValues);\r\n\r\n  const calculateAdjustedValue = (_setupValue, adjustValue, weatherAdjustValue) => {\r\n    let adjustedValue = (adjustValue / 100) * weatherAdjustValue;\r\n\r\n    const setupValue = parseInt(_setupValue, 10);\r\n\r\n    if (convertionType) {\r\n      adjustedValue = Math.round(setupValue + adjustedValue);\r\n    } else {\r\n      adjustedValue = Math.round(setupValue - adjustedValue);\r\n    }\r\n\r\n    if (adjustedValue > 100) {\r\n      adjustedValue = 100;\r\n    } else if (adjustedValue < 0 || Number.isNaN(adjustedValue) || adjustedValue === Infinity) {\r\n      adjustedValue = 0;\r\n    }\r\n    return adjustedValue;\r\n  };\r\n\r\n  const calculateOutputValues = () =>\r\n    Object.keys(inputValues).reduce((values, element) => {\r\n      const currentValues = inputValues[element];\r\n      const adjustValue = elements[element].adjustment;\r\n      const currentWeather = weatherConditions[weather];\r\n      const low = calculateAdjustedValue(currentValues.low, adjustValue, currentWeather);\r\n      const high = calculateAdjustedValue(currentValues.high, adjustValue, currentWeather);\r\n      const elementObject = { [element]: { low, high } };\r\n\r\n      return { ...values, ...elementObject };\r\n    }, {});\r\n\r\n  const handleWeatherChange = (event) => {\r\n    const selectedWeather = event.target.value || \"Bone Dry\";\r\n    setWeather(selectedWeather);\r\n\r\n    const newOuputValues = calculateOutputValues();\r\n    setOutputValues(newOuputValues);\r\n  };\r\n\r\n  const handleConvertionTypeChange = (event) => {\r\n    setConvertionType(!event.target.checked);\r\n\r\n    const newOuputValues = calculateOutputValues();\r\n    setOutputValues(newOuputValues);\r\n  };\r\n\r\n  const handleInputValueChange = (element, type, value) => {\r\n    let newValue = Number(value);\r\n\r\n    if (value === \"\" || Number.isNaN(value) || value < 0) {\r\n      newValue = 0;\r\n    } else if (value > 100) {\r\n      newValue = 100;\r\n    }\r\n\r\n    setInputValues((prevState) => ({\r\n      ...prevState,\r\n      [element]: { ...prevState[element], [type]: newValue },\r\n    }));\r\n\r\n    const adjustValue = elements[element].adjustment;\r\n    const adjustedValue = calculateAdjustedValue(newValue, adjustValue, weatherConditions[weather]);\r\n\r\n    setOutputValues((prevState) => ({\r\n      ...prevState,\r\n      [element]: { ...prevState[element], [type]: adjustedValue },\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <WeatherSelect value={weather} onWeatherChange={handleWeatherChange} />\r\n      <ConvertionTypeSelect\r\n        value={convertionType}\r\n        onConvertionChange={handleConvertionTypeChange}\r\n      />\r\n      <Row>\r\n        <Col>\r\n          <SetupTable values={inputValues} handleChange={handleInputValueChange} />\r\n        </Col>\r\n        <Col>\r\n          <SetupTable values={outputValues} readOnly />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default WeatherSetupConverter;\r\n","/* eslint-disable no-shadow */\r\n\r\nimport React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navbar as ReactNavbar, ButtonGroup, Modal, Button } from \"react-bootstrap\";\r\nimport Select from \"react-select\";\r\nimport AddRaceModal from \"./AddRaceModal\";\r\nimport WeatherSetupConverter from \"./WeatherSetupConverter\";\r\nimport { getRaceList, setActiveRace } from \"../redux/SetupHistory/setupHistory.actions\";\r\n\r\nconst WetWeatherModal = () => {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <>\r\n      <Button variant=\"dark\" onClick={handleShow}>\r\n        Wet Weather Calculator\r\n      </Button>\r\n\r\n      <Modal size=\"lg\" show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Wet Weather Calculator</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <WeatherSetupConverter />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          {/* <Button variant=\"primary\" onClick={handleClose}>\r\n            Confirm\r\n          </Button> */}\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst RaceSelect = ({ races = [], handleRaceChange, activeRaceId }) => {\r\n  const o = { value: races[activeRaceId].country, label: races[activeRaceId].country };\r\n\r\n  return (\r\n    <div style={{ width: \"200px\" }}>\r\n      <Select\r\n        options={races.map((race) => ({ value: race.id, label: race.country }))}\r\n        value={o}\r\n        defaultValue={o}\r\n        onChange={handleRaceChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Navbar = ({ races, setActiveRace, activeRaceId }) => {\r\n  const handleRaceChange = (selectedOption) => {\r\n    setActiveRace(selectedOption.value);\r\n  };\r\n\r\n  return (\r\n    <ReactNavbar collapseOnSelect bg=\"dark\" expand=\"lg\" variant=\"dark\">\r\n      <ReactNavbar.Brand>Batracer Setup Helper</ReactNavbar.Brand>\r\n      {races.length > 1 && (\r\n        <RaceSelect races={races} activeRaceId={activeRaceId} handleRaceChange={handleRaceChange} />\r\n      )}\r\n      <ReactNavbar.Toggle />\r\n      <ReactNavbar.Collapse className=\"justify-content-end\">\r\n        <ButtonGroup>\r\n          <AddRaceModal />\r\n          <WetWeatherModal />\r\n        </ButtonGroup>\r\n      </ReactNavbar.Collapse>\r\n    </ReactNavbar>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  races: getRaceList(state),\r\n  activeRaceId: state.setupHistory.activeRaceId,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setActiveRace: (raceId) => dispatch(setActiveRace(raceId)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);\r\n","import React from \"react\";\r\nimport \"./Slider.css\";\r\nimport InputRange from \"react-input-range\";\r\n\r\nimport \"react-input-range/lib/css/index.css\";\r\n\r\nconst Slider = ({ min, max, step = 1, value = 50 }) => {\r\n  const handleChange = () => {};\r\n\r\n  return (\r\n    <div className=\"slider\">\r\n      <InputRange minValue={min} maxValue={max} step={step} onChange={handleChange} value={value} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Slider;\r\n","import React from \"react\";\r\nimport {\r\n  Card,\r\n  // Dropdown,\r\n  // DropdownButton,\r\n  Form,\r\n  Row,\r\n  Col,\r\n  // InputGroup,\r\n  Container,\r\n} from \"react-bootstrap\";\r\nimport { get } from \"lodash\";\r\n// import InputRange from \"react-input-range\";\r\nimport Slider from \"../Slider\";\r\n\r\nconst SetupPart = ({ name, setupPart }) => (\r\n  <Card className=\"text-center\">\r\n    <Card.Header>{name}</Card.Header>\r\n    <Card.Body>\r\n      <Container>\r\n        {Object.keys(setupPart).map((x) => (\r\n          <Form as={Row} style={{ marginBottom: \"5px\" }}>\r\n            <Col>\r\n              <Form.Label>{x}</Form.Label>\r\n            </Col>\r\n            <Col>\r\n              {console.log({ x, setupPart })}\r\n              <Slider\r\n                min={0}\r\n                max={100}\r\n                value={{\r\n                  min: get(setupPart, `${x.toLowerCase()}.low`, 0),\r\n                  max: get(setupPart, `${x.toLowerCase()}.high`, 100),\r\n                }}\r\n              />\r\n            </Col>\r\n            {/* <Col sm={2}>\r\n              <DropdownButton variant=\"outline-secondary\" title=\"Used values\">\r\n                <Dropdown.Item href=\"#\">Action</Dropdown.Item>\r\n              </DropdownButton>\r\n            </Col> */}\r\n          </Form>\r\n        ))}\r\n      </Container>\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nexport default SetupPart;\r\n","// TODO FIX IT = WORKS BUT LOOKS SHIT\r\nconst parseSetup = (_setup) => {\r\n  const setup = _setup.split(\"\\n\");\r\n\r\n  const values = setup.filter((line) => line.startsWith(\"lo:\") || line.startsWith(\"Spot\"));\r\n\r\n  if (values.length !== 12) {\r\n    return false;\r\n  }\r\n\r\n  const test = values.map((value) => {\r\n    if (value.startsWith(\"Spot\")) {\r\n      const x = value.split(\": \")[1];\r\n      return { low: x, high: x };\r\n    }\r\n\r\n    const splitValue = value.split(\":\");\r\n    const low = splitValue[1].split(\" \")[0];\r\n    const high = splitValue[2];\r\n\r\n    return { low, high };\r\n  });\r\n\r\n  return test;\r\n};\r\n\r\nexport default parseSetup;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Modal, Form, Row, Col } from \"react-bootstrap\";\r\nimport parseSetup from \"./parseSetup\";\r\n\r\nconst SettingsModal = ({ country = \"\", addSetup }) => {\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  //   const [isValid, setValid] = useState(true);\r\n\r\n  const [setupName, setSetupName] = useState(\"\");\r\n  const [setup, setSetup] = useState(\"\");\r\n\r\n  const handleSetupChange = (event) => {\r\n    const text = event.target.value || \"\";\r\n    setSetup(text);\r\n  };\r\n\r\n  const handleSetupNameChange = (event) => {\r\n    const text = event.target.value || \"\";\r\n    setSetupName(text);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (setupName === \"\") {\r\n      return;\r\n    }\r\n\r\n    if (setup === \"\") {\r\n      addSetup(setupName);\r\n    } else {\r\n      const parsedSetup = parseSetup(setup);\r\n\r\n      if (parsedSetup === false) {\r\n        //   setValid(false);\r\n      } else {\r\n        //   setValid(true);\r\n\r\n        // TODO REFACTOR THIS !!!\r\n        const setupValues = {\r\n          wings: { front: parsedSetup[0], rear: parsedSetup[1] },\r\n          suspension: { front: parsedSetup[2], rear: parsedSetup[3] },\r\n          arb: { front: parsedSetup[4], rear: parsedSetup[5] },\r\n          rideHeight: { front: parsedSetup[6], rear: parsedSetup[7] },\r\n          tyrePressure: { front: parsedSetup[8], rear: parsedSetup[9] },\r\n          gears: { gears: parsedSetup[10] },\r\n          brake: { brake: parsedSetup[11] },\r\n        };\r\n\r\n        addSetup(setupName, setupValues);\r\n      }\r\n    }\r\n\r\n    // setSetup(\"\");\r\n    // setSetupName(\"\");\r\n    handleClose();\r\n  };\r\n\r\n  const renderForm = () => (\r\n    <Form>\r\n      <Form.Group as={Row}>\r\n        <Form.Label column sm={2}>\r\n          Country:\r\n        </Form.Label>\r\n        <Col sm={10}>\r\n          <Form.Control disabled required onChange={() => {}} value={country} />\r\n        </Col>\r\n      </Form.Group>\r\n      <Form.Group as={Row}>\r\n        <Form.Label column sm={2}>\r\n          Setup name:\r\n        </Form.Label>\r\n        <Col sm={10}>\r\n          <Form.Control required onChange={handleSetupNameChange} value={setupName} />\r\n        </Col>\r\n      </Form.Group>\r\n      <Form.Group as={Row}>\r\n        <Form.Label column sm={2}>\r\n          Import setup:\r\n        </Form.Label>\r\n        <Col sm={10}>\r\n          <Form.Control as=\"textarea\" rows=\"10\" onChange={handleSetupChange} value={setup} />\r\n        </Col>\r\n      </Form.Group>\r\n    </Form>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Button variant=\"dark\" style={{ display: \"flex\" }} onClick={handleShow}>\r\n        ADD SETUP\r\n      </Button>\r\n\r\n      <Modal show={show} onHide={handleClose} size=\"lg\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Settings</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>{renderForm()}</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" type=\"submit\" onClick={handleSubmit}>\r\n            Confirm\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SettingsModal;\r\n","/* eslint-disable no-shadow */\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport Select from \"react-select\";\r\nimport SetupPart from \"./SetupPart\";\r\nimport SettingsModal from \"./SettingsModal\";\r\nimport {\r\n  getActiveRace,\r\n  addSetup,\r\n  getActiveSetup,\r\n  setActiveSetup,\r\n} from \"../../redux/SetupHistory/setupHistory.actions\";\r\n\r\nconst RaceCard = ({\r\n  race,\r\n  setup = null,\r\n  lastRaceId,\r\n  addSetup,\r\n  activeSetupName,\r\n  setActiveSetup,\r\n}) => {\r\n  const setupOptions = Object.keys(race.setups).map((o) => ({ value: o, label: o }));\r\n\r\n  const handleActiveSetupChange = (selectedOption) => {\r\n    setActiveSetup(selectedOption.value);\r\n  };\r\n\r\n  if (lastRaceId < 0) {\r\n    return <div />;\r\n  }\r\n\r\n  return (\r\n    <Card className=\"text-center\" style={{ margin: \"10px\" }}>\r\n      <Card.Header as=\"h5\" style={{ display: \"flex\", alignItems: \"center\" }}>\r\n        <div style={{ flexGrow: \"1\" }} />\r\n        {race.country}\r\n        <div style={{ flexGrow: \"1\" }} />\r\n        <div style={{ width: \"200px\", marginRight: \"10px\" }}>\r\n          <Select\r\n            options={setupOptions}\r\n            value={{ value: activeSetupName, label: activeSetupName }}\r\n            onChange={handleActiveSetupChange}\r\n          />\r\n        </div>\r\n        <SettingsModal addSetup={addSetup} country={race.country} />\r\n      </Card.Header>\r\n      {activeSetupName && setup && (\r\n        <Card.Body>\r\n          {Object.keys(setup).map((setupPart) => (\r\n            <SetupPart name={setupPart} setupPart={setup[setupPart]} />\r\n          ))}\r\n        </Card.Body>\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  lastRaceId: state.setupHistory.lastRaceId,\r\n  race: getActiveRace(state),\r\n  setup: getActiveSetup(state),\r\n  activeSetupName: state.setupHistory.activeSetupName,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addSetup: (setupName, setup) => dispatch(addSetup(setupName, setup)),\r\n  setActiveSetup: (setupName) => dispatch(setActiveSetup(setupName)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RaceCard);\r\n","/* eslint-disable react/destructuring-assignment */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable react/button-has-type */\r\nimport \"./App.css\";\r\n\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navbar, WeatherSetupConverter, RaceCard } from \"./components\";\r\n\r\nconst App = (props) => (\r\n  <div className=\"App\">\r\n    <Navbar />\r\n    <RaceCard />\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ADD_RACE, SET_ACTIVE_RACE, ADD_SETUP, SET_ACTIVE_SETUP } from \"./setupHistory.types\";\r\n\r\nconst INITIAL_STATE = {\r\n  races: {},\r\n  lastRaceId: -1,\r\n  activeRaceId: -1,\r\n  activeSetupName: null,\r\n};\r\n\r\nconst setupHistoryReducer = (state = INITIAL_STATE, action) => {\r\n  console.log({ state, action });\r\n  switch (action.type) {\r\n    case ADD_RACE: {\r\n      const newRaceId = state.lastRaceId + 1;\r\n      return {\r\n        ...state,\r\n        lastRaceId: newRaceId,\r\n        activeRaceId: newRaceId,\r\n        races: {\r\n          ...state.races,\r\n          [newRaceId]: {\r\n            id: newRaceId,\r\n            country: action.payload.country,\r\n            setups: {},\r\n          },\r\n        },\r\n      };\r\n    }\r\n\r\n    case SET_ACTIVE_RACE: {\r\n      return {\r\n        ...state,\r\n        activeRaceId: action.payload.raceId,\r\n        activeSetupName: null,\r\n      };\r\n    }\r\n\r\n    case ADD_SETUP:\r\n      return {\r\n        ...state,\r\n        activeSetupName: action.payload.setupName,\r\n        races: {\r\n          ...state.races,\r\n          [state.activeRaceId]: {\r\n            ...state.races[state.activeRaceId],\r\n            setups: {\r\n              ...state.races[state.activeRaceId].setups,\r\n              [action.payload.setupName]: action.payload.setup,\r\n            },\r\n          },\r\n        },\r\n      };\r\n\r\n    case SET_ACTIVE_SETUP:\r\n      return {\r\n        ...state,\r\n        activeSetupName: action.payload.setupName,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default setupHistoryReducer;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport setupHistoryReducer from \"./SetupHistory/setupHistory.reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  setupHistory: setupHistoryReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore } from \"redux\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\r\n// import { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport default () => {\r\nconst store = createStore(persistedReducer);\r\n  const persistor = persistStore(store);\r\n  return { store, persistor };\r\n};\r\n","/* eslint-disable import/order */\r\nimport \"./index.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport App from \"./App\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { Provider } from \"react-redux\";\r\nimport configureStore from \"./redux/configureStore\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\n\r\nconst { store, persistor } = configureStore();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <React.StrictMode>\r\n        <App />\r\n      </React.StrictMode>\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}