{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["weatherConditions","Greasy","Moist","Drizzle","Rain","Monsoon","Storm","elements","frontWing","label","adjustment","rearWing","frontSusp","rearSusp","frontArb","rearArb","frontRh","rearRh","frontTp","rearTp","gears","brakeBias","defaultValues","Object","entries","reduce","values","element","low","high","SetupType","lowValue","highValue","readOnly","handleChange","Form","Label","Control","value","onChange","event","target","SetupTable","Table","striped","bordered","hover","size","keys","map","currentElement","WeatherSelect","onWeatherChange","Col","Group","as","Row","defaultValue","weatherType","index","ConvertionTypeSelect","onConvertionChange","Check","App","useState","weather","setWeather","convertionType","setConvertionType","inputValues","setInputValues","outputValues","setOutputValues","calculateAdjustedValue","_setupValue","adjustValue","weatherAdjustValue","adjustedValue","setupValue","parseInt","Math","round","isNaN","Infinity","className","Container","selectedWeather","checked","newOuputValues","currentValues","currentWeather","elementObject","type","newValue","Number","prevState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c83a602c.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/control-has-associated-label */\n/* eslint-disable no-restricted-globals */\n/* eslint-disable react/no-array-index-key */\n/* eslint-disable react/prop-types */\nimport \"./App.css\";\n\nimport { Col, Container, Form, Row, Table } from \"react-bootstrap\";\nimport React, { useState } from \"react\";\n\nconst weatherConditions = {\n  \"Bone Dry\": 0,\n  Greasy: 9,\n  Moist: 18,\n  Drizzle: 27,\n  \"Light Rain\": 36,\n  Rain: 45,\n  \"Wet and Slippery\": 54,\n  \"Steady Rain\": 63,\n  \"Heavy Rain\": 72,\n  \"Treacherous Rain and Spray\": 81,\n  Monsoon: 90,\n  Storm: 100,\n};\n\nconst elements = {\n  frontWing: { label: \"Front Wing\", adjustment: 20 },\n  rearWing: { label: \"Rear Wing\", adjustment: 35 },\n  frontSusp: { label: \"Front Suspension\", adjustment: -20 },\n  rearSusp: { label: \"Rear Suspension\", adjustment: -35 },\n  frontArb: { label: \"Front Anti-Roll Bar\", adjustment: -18 },\n  rearArb: { label: \"Rear Anti-Roll Bar\", adjustment: -30 },\n  frontRh: { label: \"Front Ride Height\", adjustment: -12 },\n  rearRh: { label: \"Rear Ride Height\", adjustment: -13 },\n  frontTp: { label: \"Front Tire Pressure\", adjustment: 10 },\n  rearTp: { label: \"Rear Tire Pressure\", adjustment: 12 },\n  gears: { label: \"Gears\", adjustment: -5 },\n  brakeBias: { label: \"Brake Bias\", adjustment: 15 },\n};\n\nconst defaultValues = Object.entries(elements).reduce(\n  (values, element) => ({ ...values, [element[0]]: { low: 0, high: 100 } }),\n  {}\n);\n\nconst SetupType = ({ element, label, lowValue, highValue, readOnly = false, handleChange }) => (\n  <tr>\n    <td>\n      <Form.Label>{label}</Form.Label>\n    </td>\n    <td>\n      <Form.Control\n        readOnly={readOnly}\n        value={lowValue}\n        onChange={(event) => handleChange(element, \"low\", event.target.value)}\n      />\n    </td>\n    <td>\n      <Form.Control\n        readOnly={readOnly}\n        value={highValue}\n        onChange={(event) => handleChange(element, \"high\", event.target.value)}\n      />\n    </td>\n  </tr>\n);\n\nconst SetupTable = ({ readOnly = false, values, handleChange = () => {} }) => (\n  <Table striped bordered hover={false} size=\"sm\">\n    <thead>\n      <tr>\n        <th />\n        <th>Lowest</th>\n        <th>Highest</th>\n      </tr>\n    </thead>\n    <tbody>\n      {Object.keys(elements).map((element) => {\n        const currentElement = elements[element];\n        const lowValue = values[element].low;\n        const highValue = values[element].high;\n        return (\n          <SetupType\n            key={element}\n            element={element}\n            label={currentElement.label}\n            lowValue={lowValue}\n            highValue={highValue}\n            readOnly={readOnly}\n            handleChange={handleChange}\n          />\n        );\n      })}\n    </tbody>\n  </Table>\n);\n\nconst WeatherSelect = ({ value, onWeatherChange }) => (\n  <Col>\n    <Form.Group as={Row}>\n      {/* <Form.Label>Weather: </Form.Label> */}\n\n      <Form.Control as=\"select\" defaultValue=\"Bone Dry\" value={value} onChange={onWeatherChange}>\n        {Object.keys(weatherConditions).map((weatherType, index) => (\n          <option key={index}>{weatherType}</option>\n        ))}\n      </Form.Control>\n    </Form.Group>\n  </Col>\n);\n\nconst ConvertionTypeSelect = ({ value, onConvertionChange }) => {\n  const label = \"Dry to Wet\";\n\n  return (\n    <span>\n      <Col>\n        <Form.Group>\n          <Form.Check label={label} value={value} onChange={onConvertionChange} />\n        </Form.Group>\n      </Col>\n    </span>\n  );\n};\n\nconst App = () => {\n  const [weather, setWeather] = useState(\"Bone Dry\");\n  const [convertionType, setConvertionType] = useState(true);\n  const [inputValues, setInputValues] = useState(defaultValues);\n  const [outputValues, setOutputValues] = useState(defaultValues);\n\n  const calculateAdjustedValue = (_setupValue, adjustValue, weatherAdjustValue) => {\n    let adjustedValue = (adjustValue / 100) * weatherAdjustValue;\n\n    const setupValue = parseInt(_setupValue, 10);\n\n    if (convertionType) {\n      adjustedValue = Math.round(setupValue + adjustedValue);\n    } else {\n      adjustedValue = Math.round(setupValue - adjustedValue);\n    }\n\n    if (adjustedValue > 100) {\n      adjustedValue = 100;\n    } else if (adjustedValue < 0 || isNaN(adjustedValue) || adjustedValue === Infinity) {\n      adjustedValue = 0;\n    }\n    return adjustedValue;\n  };\n\n  const handleWeatherChange = (event) => {\n    const selectedWeather = event.target.value || \"Bone Dry\";\n    setWeather(selectedWeather);\n  };\n\n  const handleConvertionTypeChange = (event) => {\n    setConvertionType(!event.target.checked);\n\n    const newOuputValues = Object.keys(inputValues).reduce((values, element) => {\n      const currentValues = inputValues[element];\n      const adjustValue = elements[element].adjustment;\n      const currentWeather = weatherConditions[weather];\n      const low = calculateAdjustedValue(currentValues.low, adjustValue, currentWeather);\n      const high = calculateAdjustedValue(currentValues.high, adjustValue, currentWeather);\n      const elementObject = { [element]: { low, high } };\n\n      return { ...values, ...elementObject };\n    }, {});\n\n    setOutputValues(newOuputValues);\n  };\n\n  const handleInputValueChange = (element, type, value) => {\n    let newValue = Number(value);\n\n    if (value === \"\" || isNaN(value) || value < 0) {\n      newValue = 0;\n    } else if (value > 100) {\n      newValue = 100;\n    }\n\n    setInputValues((prevState) => ({\n      ...prevState,\n      [element]: { ...prevState[element], [type]: newValue },\n    }));\n\n    const adjustValue = elements[element].adjustment;\n    const adjustedValue = calculateAdjustedValue(newValue, adjustValue, weatherConditions[weather]);\n\n    setOutputValues((prevState) => ({\n      ...prevState,\n      [element]: { ...prevState[element], [type]: adjustedValue },\n    }));\n  };\n\n  return (\n    <div className=\"App\">\n      <Container>\n        <WeatherSelect value={weather} onWeatherChange={handleWeatherChange} />\n        <ConvertionTypeSelect\n          value={convertionType}\n          onConvertionChange={handleConvertionTypeChange}\n        />\n        <Row>\n          <Col>\n            <SetupTable values={inputValues} handleChange={handleInputValueChange} />\n          </Col>\n          <Col>\n            <SetupTable values={outputValues} readOnly />\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/* eslint-disable import/order */\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport App from \"./App\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}